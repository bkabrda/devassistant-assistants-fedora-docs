dependencies:
- rpm: [publican, publican-fedora, git]

args:
  name:
    use: common_args
    help: "Name of book to create"

  release:
    flags: [-r, --release]
    help: "Fedora release"
    required: False

  product:
    flags: [-p, --product]
    help: "Product name"
    required: False
    default: Fedora

  lang:
    flags: [-l, --lang]
    help: Language
    required: False
    default: en-US

  subtitle:
    flags: [-s, --subtitle]
    help: Subtitle
    required: True

  # TODO: stuff for author group - firstname, lastname (otherwise get this from git config)

run:
- setup_project_dir:
   from: $name
   create_topdir: False
   accept_path: False
- if not $release:
  - $release: $__distro_version__

- log_i: Creating new book using publican.
- cl: publican create --type book --brand fedora --product "$product" --version "$release" --lang "$lang" --name "$topdir"
- cl: cd "$topdir_normalized"

- $have_username: True
- $retval, $username~: $(git config user.name)
# if we can't get username from git, try looking up /etc/passwd
# TODO: tell user to set his git config user.name
# TODO: split username to first and last name
- if not $retval:
  - $username~: $(getent passwd `whoami` | cut -d ':' -f 5)
  - $have_username, $_~: $([ `whoami` != "$username" -a ! -z "$username" ])
  - if not $have_username:
    - log_w: Can't get a proper username, TODO some instructions
- if $have_username:
  - cl: sed -i 's|<!ENTITY HOLDER.*|<!ENTITY HOLDER "$username">|' "$lang/$topdir_normalized.ent"
  - cl: sed -i -e '/affiliation/d' -e '/orgname/d' -e '/orgdiv/d' "$lang/Author_Group.xml"

- $have_email, $email~: $(git config user.email)
- if not $have_email:
  - log_w: Can't get email, TODO instructions
- else:
  - cl: sed -i 's|<email>.*</email>|<email>$email</email>|' "$lang/Author_Group.xml" "$lang/Revision_History.xml"

- cl: sed -i 's|<subtitle>.*</subtitle>|<subtitle>$subtitle</subtitle>|' "$lang/Book_Info.xml"

- $ent_bz: <!ENTITY BZURL '<ulink url="https://bugzilla.redhat.com/enter_bug.cgi?product=&PRODUCT;&amp;component=&BOOKID;" />'>
- cl: |
    cat >> "$lang/$topdir_normalized.ent" << EOF
    $ent_bz
    EOF

- log_i: Your project has been created in "$topdir_normalized".
- log_i: TODO instructions
